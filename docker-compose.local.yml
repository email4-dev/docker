services:
  valkey:
    image: valkey/valkey:alpine
    command: ["valkey-server", "/usr/local/etc/valkey/valkey.conf"]
    #ports:
    #  - "6379:6379"
    volumes:
      - valkey_data:/data
      - ./valkey.conf:/usr/local/etc/valkey/valkey.conf:ro
    restart: unless-stopped
    environment:
      DEBUG: ${DEBUG}
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.ltrim.schedule: "@every 24h" # configure this as necessary
      ofelia.job-exec.ltrim.command: "valkey-cli LTRIM failed 0 99" # keep the last 100 entries
    networks:
      - email4dev_network

  redisinsight:
    image: redislabs/redisinsight:latest
    ports:
      - '5540:5540'
    volumes:
      - insight_data:/db
    environment:
      RI_REDIS_HOST: valkey
      RI_DATABASE_MANAGEMENT: false
    networks:
      - email4dev_network

  minio:
    image: quay.io/minio/minio:latest
    command:
      - minio
      - server
      - /data
      - --console-address
      - ":9001"
    ports:
    #  - 9000:9000
      - 9001:9001
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BROWSER: ${MINIO_BROWSER}
      DEBUG: ${DEBUG}
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1GB
    networks:
      - email4dev_network

  pocketbase:
    image: ghcr.io/muchobien/pocketbase:latest
    ports:
      - "8090:8090"
    volumes:
      - pocketbase_data:/pb_data
      - pocketbase_migrations:/pb_migrations
    restart: unless-stopped
    networks:
      - email4dev_network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.local
      additional_contexts:
         source: ../api
    ports:
      - "3000:3000"
    environment:
      POCKETBASE_URL: ${POCKETBASE_URL}
      POCKETBASE_EMAIL: ${POCKETBASE_EMAIL}
      POCKETBASE_PASS: ${POCKETBASE_PASS}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      ATTACHMENT_LIMIT: ${ATTACHMENT_LIMIT}
      CAPTCHA_EXPIRE: ${CAPTCHA_EXPIRE}
      CAPTCHA_COMPLEXITY: ${CAPTCHA_COMPLEXITY}
      VERIFICATION_EXPIRE: ${VERIFICATION_EXPIRE}
      DEBUG: ${DEBUG}
    depends_on:
      - valkey
      - minio
      - pocketbase
    restart: unless-stopped
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.s3-cleanup.schedule: "@every ${CLEANUP_INTERVAL}"
      ofelia.job-exec.s3-cleanup.command: "bun /api/cleanup.ts"
    networks:
      - email4dev_network

  # dashboard:
  #  build:
  #    context: ./dashboard
  #    dockerfile: Dockerfile
  #    additional_contexts:
  #       source: ../dashboard
  #  depends_on:
  #    - api
  #  restart: unless-stopped
  #  networks:
  #    - email4dev_network

  # Mailer service
  mailer:
    build:
      context: ./mailer
      dockerfile: Dockerfile.local
      additional_contexts:
         source: ../mailer
    environment:
      API_URL: ${API_URL}
      POCKETBASE_URL: ${POCKETBASE_URL}
      POCKETBASE_EMAIL: ${POCKETBASE_EMAIL}
      POCKETBASE_PASS: ${POCKETBASE_PASS}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      CONSUMER_BLOCK: ${CONSUMER_BLOCK}
      CONSUMER_BATCH_SIZE: ${CONSUMER_BATCH_SIZE}
      SMTP_HOSTNAME: ${SMTP_HOSTNAME}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_SECURITY: ${SMTP_SECURITY}
      SMTP_AUTH: ${SMTP_AUTH}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_PRIVATE_KEY: ${SMTP_PRIVATE_KEY}
      SMTP_ACCESS_URL: ${SMTP_ACCESS_URL}
      SMTP_POOL: ${SMTP_POOL}
      DEBUG: ${DEBUG}
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - email4dev_network

  # retrier:
  #   build:
  #     context: ./mailer
  #     dockerfile: Dockerfile.local
  #     additional_contexts:
  #       source: ../mailer
  #   command:
  #    - "--retrier"
  #   environment:
  #     API_URL: ${API_URL}
  #     POCKETBASE_URL: ${POCKETBASE_URL}
  #     POCKETBASE_EMAIL: ${POCKETBASE_EMAIL}
  #     POCKETBASE_PASS: ${POCKETBASE_PASS}
  #     MINIO_ROOT_USER: ${MINIO_ROOT_USER}
  #     MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
  #     CONSUMER_BLOCK: ${CONSUMER_BLOCK}
  #     CONSUMER_BATCH_SIZE: ${CONSUMER_BATCH_SIZE}
  #     MAILER_RETRIES: ${MAILER_RETRIES}
  #     RETRY_INTERVAL: ${RETRY_INTERVAL}
  #     SMTP_HOSTNAME: ${SMTP_HOSTNAME}
  #     SMTP_PORT: ${SMTP_PORT}
  #     SMTP_SECURITY: ${SMTP_SECURITY}
  #     SMTP_AUTH: ${SMTP_AUTH}
  #     SMTP_USERNAME: ${SMTP_USERNAME}
  #     SMTP_PASSWORD: ${SMTP_PASSWORD}
  #     SMTP_PRIVATE_KEY: ${SMTP_PRIVATE_KEY}
  #     SMTP_ACCESS_URL: ${SMTP_ACCESS_URL}
  #     SMTP_POOL: ${SMTP_POOL}
  #     DEBUG: ${DEBUG}
  #   depends_on:
  #    - mailer
  #   restart: unless-stopped
  #   networks:
  #    - email4dev_network

  ofelia:
    image: mcuadros/ofelia:latest
    depends_on:
      - valkey
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  valkey_data:
  insight_data:
  minio_data:
  pocketbase_data:
  pocketbase_migrations:
  caddy_data:
  caddy_config:

networks:
  email4dev_network:
    driver: bridge